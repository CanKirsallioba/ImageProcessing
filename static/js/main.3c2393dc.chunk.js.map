{"version":3,"sources":["components/home/MainBody.jsx","editable-stuff/Profile.JPG","editable-stuff/resume.pdf","components/home/AboutMe.jsx","components/home/ProjectCard.jsx","components/home/Project.jsx","components/Footer.jsx","components/Navbar.jsx","components/blog/BlogBuilder.jsx","editable-stuff/blog.jsx","components/blog/Blog.jsx","components/blog/BlogPost.jsx","App.js","serviceWorker.js","index.js"],"names":["MainBody","useState","Array","icons","length","fill","hoverstatus","setHoverstatus","toggleHover","data","newhoverStatus","event","icon","id","className","FirstName","MiddleName","LastName","devDesc","map","key","target","rel","href","url","aria-label","image","split","onMouseOver","onMouseOut","role","divStyle","display","flexDirection","alignItems","AboutMe","setInstaProfilePic","showInstaProfilePic","showInsta","setShowInsta","Pdf","resumeURL","useEffect","handleRequest","e","axios","get","instaLink","instaUsername","instaQuerry","then","response","graphql","user","profile_pic_url_hd","catch","error","console","message","finally","style","src","Profile","alt","width","height","aboutHeading","aboutDescription","Language","value","setData","useCallback","array","total_count","index","push","language","Math","trunc","ProjectCard","updated_at","setUpdatedAt","handleUpdatetime","date","Date","pushed_at","diff","getTime","hours","toString","day","getDate","monthIndex","getMonth","year","getFullYear","name","description","svn_url","stargazers_count","languages_url","Project","projectsArray","setProjectsArray","gitHubLink","gitHubUsername","gitHubQuerry","slice","projectsLength","projectHeading","project","Footer","backgroundColor","bgStyle","Navbar","props","isTop","setIsTop","document","addEventListener","istop","window","scrollY","process","type","data-toggle","data-target","aria-controls","aria-expanded","showBlog","to","BlogBuilder","title","list","addParagraph","addHeading","getBlog","this","bloglist","blog","blog1","Blog","BlogCard","BlogPost","match","params","post","Home","App","basename","showNavigationbar","path","exact","component","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c2393dc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Typist from \"react-typist\";\r\nimport {\r\n  FirstName,\r\n  LastName,\r\n  MiddleName,\r\n  devDesc,\r\n  icons,\r\n} from \"../../editable-stuff/configurations.json\";\r\n\r\nconst MainBody = () => {\r\n  // const [backgroundType, setBackgroundType] = useState(Configs.backgroundType);\r\n  const [hoverstatus, setHoverstatus] = useState(\r\n    new Array(icons.length).fill(\"socialicons\")\r\n  );\r\n\r\n  const toggleHover = (data) => {\r\n    const newhoverStatus = [...hoverstatus];\r\n\r\n    if (data.event === \"enter\") {\r\n      newhoverStatus[data.icon.id] = \"socialiconshover\";\r\n      return setHoverstatus(newhoverStatus);\r\n    } else if (data.event === \"leave\") {\r\n      newhoverStatus[data.icon.id] = \"socialicons\";\r\n      return setHoverstatus(newhoverStatus);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        id=\"home\"\r\n        className=\"title jumbotron jumbotron-fluid bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\r\n      >\r\n        <div id=\"stars\"></div>\r\n        <div className=\"container container-fluid text-center \">\r\n          <h1 className=\"display-1\">\r\n            {FirstName + \" \" + MiddleName + \" \" + LastName}\r\n          </h1>\r\n          <Typist className=\"lead\"> {devDesc}</Typist>\r\n          <div className=\"p-5\">\r\n            {icons.map((icon) => (\r\n              <a\r\n                key={icon.id}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={icon.url}\r\n                aria-label={`My ${icon.image.split(\"-\")[1]}`}\r\n              >\r\n                <i\r\n                  className={`fab ${icon.image}  fa-3x ${hoverstatus[icon.id]}`}\r\n                  onMouseOver={() => toggleHover({ icon, event: \"enter\" })}\r\n                  onMouseOut={() => toggleHover({ icon, event: \"leave\" })}\r\n                />\r\n              </a>\r\n            ))}\r\n          </div>\r\n          <a\r\n            className=\"btn btn-outline-light btn-lg\"\r\n            href=\"#aboutme\"\r\n            role=\"button\"\r\n            aria-label=\"Learn more about me\"\r\n          >\r\n            More about me\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainBody;\r\n","export default __webpack_public_path__ + \"static/media/Profile.d4797eb6.JPG\";","export default __webpack_public_path__ + \"static/media/resume.f29d0d49.pdf\";","import React, { useState, useEffect, Profiler } from \"react\";\r\nimport axios from \"axios\";\r\nimport Profile from \"../../editable-stuff/Profile.JPG\"\r\nimport Pdf from \"../../editable-stuff/resume.pdf\";\r\nimport {\r\n  aboutHeading,\r\n  aboutDescription,\r\n  showInstaProfilePic,\r\n  instaLink,\r\n  instaUsername,\r\n  instaQuerry,\r\n} from \"../../editable-stuff/configurations.json\";\r\nconst divStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  alignItems: 'center'\r\n};\r\nconst AboutMe = () => {\r\n  const [instaProfilePic, setInstaProfilePic] = useState(\"\");\r\n  const [showInsta, setShowInsta] = useState(showInstaProfilePic);\r\n  const [resumeURL] = useState(Pdf);\r\n\r\n  useEffect(() => {\r\n    if (showInsta) {\r\n      handleRequest();\r\n    }\r\n  }, [showInsta]);\r\n\r\n  const handleRequest = (e) => {\r\n    axios\r\n      .get(instaLink + instaUsername + instaQuerry)\r\n      .then((response) => {\r\n        // handle success\r\n        // console.log(response.data.graphql);\r\n        return setInstaProfilePic(\r\n          response.data.graphql.user.profile_pic_url_hd\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        // handle error\r\n        setShowInsta(false);\r\n        return console.error(error.message);\r\n      })\r\n      .finally(() => {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div id=\"aboutme\" className=\"jumbotron jumbotron-fluid m-0\">\r\n      <div className=\"container container-fluid p-5\">\r\n        <div className=\"row\" style={divStyle}>\r\n            <div className=\"col-5 d-none d-lg-block align-self-center\">\r\n              <img\r\n                className=\"border border-secondary rounded-circle\"\r\n                src={Profile}\r\n                alt=\"profilepicture\"\r\n                width=\"400\"\r\n                height=\"550\"\r\n              />\r\n            </div>\r\n            <div className=\"col d-lg-inline align-self-center\">\r\n            <h1 className=\"display-4 mb-5 text-center\">{aboutHeading}</h1>\r\n            <p className=\"lead text-center\">{aboutDescription}</p>\r\n            {resumeURL && (\r\n              <p className=\"lead text-center\">\r\n                <a\r\n                  className=\"btn btn-outline-dark btn-lg\"\r\n                  href={Pdf}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer noopener\"\r\n                  role=\"button\"\r\n                  aria-label=\"Resume/CV\"\r\n                >\r\n                  Resume\r\n                </a>\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutMe;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ProjectCard = ({ value }) => {\r\n  const [updated_at, setUpdatedAt] = useState(\"0 mints\");\r\n\r\n  const handleUpdatetime = useCallback(\r\n    (e) => {\r\n      const date = new Date(value.pushed_at);\r\n      const nowdate = new Date();\r\n      const diff = nowdate.getTime() - date.getTime();\r\n      const hours = Math.trunc(diff / 1000 / 60 / 60);\r\n\r\n      if (hours < 24) {\r\n        return setUpdatedAt(`${hours.toString()} hours ago`);\r\n      } else {\r\n        const monthNames = [\r\n          \"January\",\r\n          \"February\",\r\n          \"March\",\r\n          \"April\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          \"August\",\r\n          \"September\",\r\n          \"October\",\r\n          \"November\",\r\n          \"December\",\r\n        ];\r\n        const day = date.getDate();\r\n        const monthIndex = date.getMonth();\r\n        const year = date.getFullYear();\r\n\r\n        return setUpdatedAt(`on ${day} ${monthNames[monthIndex]} ${year}`);\r\n      }\r\n    },\r\n    [value.pushed_at]\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleUpdatetime();\r\n  }, [handleUpdatetime]);\r\n\r\n  const { name, description, svn_url, stargazers_count, languages_url } = value;\r\n  return (\r\n    <div className=\"col-md-6\">\r\n      <div className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\r\n        {/* <img src=\"\" className=\"card-img-top\" alt=\"...\" /> */}\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{name} </h5>\r\n          <p className=\"card-text\">{description} </p>\r\n          <a\r\n            href={`${svn_url}/archive/master.zip`}\r\n            className=\"btn btn-outline-secondary mr-3\"\r\n          >\r\n            <i className=\"fab fa-github\" /> Clone Project\r\n          </a>\r\n          <a\r\n            href={svn_url}\r\n            target=\" _blank\"\r\n            className=\"btn btn-outline-secondary\"\r\n          >\r\n            <i className=\"fab fa-github\" /> Repo\r\n          </a>\r\n          <hr />\r\n          <Language value={languages_url}></Language>\r\n          <p className=\"card-text\">\r\n            <span className=\"text-dark card-link mr-4\">\r\n              <i className=\"fab fa-github\" /> Stars{\" \"}\r\n              <span className=\"badge badge-dark\">{stargazers_count}</span>\r\n            </span>\r\n            <small className=\"text-muted\">Updated {updated_at}</small>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Language = ({ value }) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const handleRequest = useCallback(\r\n    (e) => {\r\n      axios\r\n        .get(value)\r\n        .then((response) => {\r\n          // handle success\r\n          // console.log(response.data);\r\n          return setData(response.data);\r\n        })\r\n        .catch((error) => {\r\n          // handle error\r\n          return console.error(error.message);\r\n        })\r\n        .finally(() => {\r\n          // always executed\r\n        });\r\n    },\r\n    [value]\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleRequest();\r\n  }, [handleRequest]);\r\n\r\n  const array = [];\r\n  let total_count = 0;\r\n  for (let index in data) {\r\n    array.push(index);\r\n    total_count += data[index];\r\n    // console.log(index, this.state.data[index]);\r\n  }\r\n  // console.log(\"array contains \", array, this.state.data[array[0]]);\r\n\r\n  return (\r\n    <div className=\"pb-3\">\r\n      Languages:{\" \"}\r\n      {array.map((language) => (\r\n        <p key={language} className=\"badge badge-light card-link\">\r\n          {language}: {Math.trunc((data[language] / total_count) * 1000) / 10} %\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport {\r\n  projectHeading,\r\n  gitHubLink,\r\n  gitHubUsername,\r\n  gitHubQuerry,\r\n  projectsLength,\r\n} from \"../../editable-stuff/configurations.json\";\r\n\r\nconst Project = () => {\r\n  const [projectsArray, setProjectsArray] = useState([]);\r\n\r\n  const handleRequest = useCallback((e) => {\r\n    axios\r\n      .get(gitHubLink + gitHubUsername + gitHubQuerry)\r\n      .then((response) => {\r\n        // handle success\r\n        // console.log(response.data.slice(0, 4));\r\n        return setProjectsArray(response.data.slice(0, projectsLength));\r\n      })\r\n      .catch((error) => {\r\n        // handle error\r\n        return console.error(error.message);\r\n      })\r\n      .finally(() => {\r\n        // always executed\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleRequest();\r\n  }, [handleRequest]);\r\n\r\n  return (\r\n    <div id=\"projects\" className=\"jumbotron jumbotron-fluid bg-transparent m-0\">\r\n      {projectsArray.length && (\r\n        <div className=\"container container-fluid p-5\">\r\n          <h1 className=\"display-4 pb-5\">{projectHeading}</h1>\r\n          <div className=\"row\">\r\n            {projectsArray.map((project) => (\r\n              <ProjectCard key={project.id} id={project.id} value={project} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Footer = () => {\r\n  const [bgStyle] = useState({ backgroundColor: \"#f5f5f5\" });\r\n\r\n  return (\r\n    <footer style={bgStyle} className=\"mt-auto py-3 text-center\">\r\n      {/* <strong> &copy; 2019 </strong>*/}\r\n      <a\r\n        className=\"badge badge-dark\"\r\n        rel=\"noopener\"\r\n        href=\"https://github.com/CanKirsallioba\"\r\n        aria-label=\"My GitHub\"\r\n      >\r\n        Can Kırşallıoba 2020\r\n      </a>{\" \"}\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pdf from \"../editable-stuff/resume.pdf\";\r\nimport { showBlog, FirstName } from \"../editable-stuff/configurations.json\";\r\n\r\nconst Navbar = (props) => {\r\n  const [isTop, setIsTop] = useState(true);\r\n  useEffect(() => {\r\n    document.addEventListener(\"scroll\", () => {\r\n      const istop = window.scrollY < 200;\r\n      if (istop !== isTop) {\r\n        setIsTop(istop);\r\n      }\r\n    });\r\n  }, [isTop]);\r\n\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg fixed-top navbar-light ${\r\n        isTop ? \"bg-transparent\" : \"bg-gradient\"\r\n      } `}\r\n    >\r\n      <a className=\"navbar-brand\" href={process.env.PUBLIC_URL + \"/#home\"}>\r\n        {`<${FirstName} />`}\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarTogglerDemo02\"\r\n        aria-controls=\"navbarTogglerDemo02\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n        <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n          {showBlog && (\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                className=\"nav-link lead\"\r\n                to={process.env.PUBLIC_URL + \"/blog\"}\r\n              >\r\n                Blog\r\n              </Link>\r\n            </li>\r\n          )}\r\n          <li className=\"nav-item\">\r\n            <a\r\n              className=\"nav-link lead\"\r\n              href={process.env.PUBLIC_URL + \"/#projects\"}\r\n            >\r\n              Projects\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a\r\n              className=\"nav-link lead\"\r\n              href={Pdf}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer noopener\"\r\n            >\r\n              <b>Resume</b>\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a\r\n              className=\"nav-link lead\"\r\n              href={process.env.PUBLIC_URL + \"/#aboutme\"}\r\n            >\r\n              <b>About</b>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState, Fragment } from \"react\";\r\n\r\nclass BlogBuilder {\r\n  list = [];\r\n\r\n  constructor({ title, image, description }) {\r\n    this.title = title;\r\n    this.image = image;\r\n    this.description = description;\r\n  }\r\n\r\n  addParagraph = (props) => {\r\n    this.list.push(\r\n      <p key={this.list.length} className=\"lead\">\r\n        {props}\r\n      </p>\r\n    );\r\n    return this;\r\n  };\r\n\r\n  addHeading = (props) => {\r\n    this.list.push(\r\n      <Fragment key={this.list.length}>\r\n        <h1 className=\"\">{props}</h1>\r\n        <hr />\r\n      </Fragment>\r\n    );\r\n    return this;\r\n  };\r\n\r\n  getBlog = () => {\r\n    return <div className=\"container-lg\">{this.list}</div>;\r\n  };\r\n}\r\n\r\nexport { BlogBuilder };\r\n","import { BlogBuilder } from \"../components/blog/BlogBuilder\";\r\nconst bloglist = [];\r\n\r\nconst blog = new BlogBuilder({\r\n  title: \"My First Blog\",\r\n  image: \"img\",\r\n  description:\r\n    \"Description Lorem ipsum dolor, sit amet consectetur adipisicing elit. Voluptatem, dolores? Lorem ipsum dolor, sit amet consectetur adipisicing elit. Quia provident similique corporis rem ullam odio excepturi voluptas harum, architecto sit!\",\r\n})\r\n  .addHeading(\"Heading\")\r\n  .addParagraph(\r\n    \"1st Paragraph Lorem ipsum dolor sit amet consectetur adipisicing elit. Aspernatur vero reiciendis quas, autem sit culpa? Quibusdam, cupiditate voluptate a non nulla aliquid enim doloremque ullam, facilis quisquam similique hic omnis!\"\r\n  )\r\n  .addParagraph(\r\n    \"2nd Paragraph Lorem ipsum, dolor sit amet consectetur adipisicing elit. Consequuntur ad, temporibus quae obcaecati eum expedita pariatur aspernatur recusandae beatae iste soluta sunt blanditiis dolore ipsam quia laboriosam quas perspiciatis architecto?\"\r\n  );\r\n\r\nconst blog1 = new BlogBuilder({\r\n  title: \"My Second Blog\",\r\n  image: \"img\",\r\n  description:\r\n    \"Description Lorem ipsum dolor sit amet consectetur adipisicing elit. Iure tempore aut neque consectetur voluptatem quam nihil, facere earum adipisci, animi beatae dicta maiores, ipsam delectus ab molestias dolorum aperiam? Sapiente?\",\r\n})\r\n  .addHeading(\"Heading\")\r\n  .addParagraph(\r\n    \"1st Paragraph Aspernatur vero reiciendis quas, autem sit culpa? Quibusdam, cupiditate voluptate a non nulla aliquid enim doloremque ullam, facilis quisquam similique hic omnis!\"\r\n  )\r\n  .addParagraph(\r\n    \"2nd Paragraph Consequuntur ad, temporibus quae obcaecati eum expedita pariatur aspernatur recusandae beatae iste soluta sunt blanditiis dolore ipsam quia laboriosam quas perspiciatis architecto?\"\r\n  )\r\n  .addHeading(\"New Heading\")\r\n  .addParagraph(\r\n    \"1st Paragraph Lorem ipsum dolor sit amet consectetur adipisicing elit. Aspernatur vero reiciendis quas, autem sit culpa? Quibusdam, cupiditate voluptate a non nulla aliquid enim doloremque ullam, facilis quisquam similique hic omnis!\"\r\n  )\r\n  .addParagraph(\r\n    \"2nd Paragraph Lorem ipsum, dolor sit amet consectetur adipisicing elit. Consequuntur ad, temporibus quae obcaecati eum expedita pariatur aspernatur recusandae beatae iste soluta sunt blanditiis dolore ipsam quia laboriosam quas perspiciatis architecto?\"\r\n  );\r\n\r\nbloglist.push(blog1);\r\nbloglist.push(blog);\r\n\r\nexport default bloglist;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { BlogBuilder } from \"./BlogBuilder\";\r\nimport bloglist from \"../../editable-stuff/blog\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Blog = (props) => {\r\n  return (\r\n    <div className=\"container-lg mt-5 bg-blue\">\r\n      <h1 className=\"text-center\">Blogs</h1>\r\n      {bloglist.map((value, index) => {\r\n        return (\r\n          <BlogCard\r\n            key={index}\r\n            title={value.title}\r\n            description={value.description}\r\n            index={index}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BlogCard = ({ index, title, image, description }) => {\r\n  return (\r\n    <div className=\"m-5\">\r\n      <div className=\"\">\r\n        <div className=\"row\">\r\n          <div className=\"col-4 col-lg-12\">\r\n            {/* <img src={image} className=\"card-img\" alt=\"...\" /> */}\r\n          </div>\r\n          <div className=\"col-8 col-lg-12\">\r\n            <div className=\"\">\r\n              <h1 className=\"\">{title}</h1>\r\n              <p className=\"lead\">{description}</p>\r\n              <Link to={`${process.env.PUBLIC_URL}blog/${index}`}>\r\n                Read more...{\" \"}\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Blog, BlogBuilder };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport bloglist from \"../../editable-stuff/blog\";\r\nconst BlogPost = ({ match }) => {\r\n  const { id } = match.params;\r\n  const post = bloglist[id];\r\n\r\n  return (\r\n    <div className=\"container-lg mt-5\">\r\n      {post && (\r\n        <div>\r\n          <h1 className=\"display-2 text-center\">{post.title}</h1>\r\n          <img className=\"img-fluid mb-2\" src={post.image} alt={post.title} />\r\n          {post.getBlog()}\r\n        </div>\r\n      )}\r\n      {!post && <h1 className=\"display-1 text-center\">404 - Page not found</h1>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogPost;\r\n","import React, { Fragment } from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport \"./App.css\";\r\nimport {\r\n  showNavigationbar,\r\n  showBlog,\r\n} from \"./editable-stuff/configurations.json\";\r\nimport MainBody from \"./components/home/MainBody\";\r\nimport AboutMe from \"./components/home/AboutMe\";\r\nimport Project from \"./components/home/Project\";\r\nimport Footer from \"./components/Footer\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { Blog } from \"./components/blog/Blog\";\r\nimport BlogPost from \"./components/blog/BlogPost\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Fragment>\r\n      <MainBody />\r\n      <AboutMe />\r\n      <Project />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst App = () => (\r\n  <BrowserRouter basename={process.env.PUBLIC_URL + \"/\"}>\r\n    {showNavigationbar && <Navbar />}\r\n    <Route path=\"/\" exact component={Home} />\r\n    {showBlog && <Route path=\"/blog\" exact component={Blog} />}\r\n    {showBlog && <Route path=\"/blog/:id\" component={BlogPost} />}\r\n    <Footer />\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can\"t reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}